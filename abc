[]
[1 2 3 4 5 6 7 8 9 10]
['() '() '()]
[[] [] []]
["a" "b" "c"]
[1.1 2.2 3.3 4.4 5.5 6.6 7.7 8.8 9.9 10.1]
[+ - * / % id]
['x 'y 'z 'abc 'def]
[#\x #\y #\z #\space #\newline]
['(1 2 3) '(2 3 4) '(3 4 5)]
[[1 2 3] [2 3 4] [3 4 5]]


"(eq? (list #{x}) (append '() (list #{x})))
(eq? (list #{x}) (append (list #{x}) '()))"

s.each do |x|
s.each do |y|
puts "    (eq? (list #{x} #{y})\n        (append (list #{x}) (list #{y})))"
end
end

1 2 3 4 5 6 7 8 9 10
'() '() '()
[] [] []
"a" "b" "c"
1.1 2.2 3.3 4.4 5.5 6.6 7.7 8.8 9.9 10.1
+ - * / % id
'x 'y 'z 'abc 'def
#\x #\y #\z #\space #\newline
'(1 2 3) '(2 3 4) '(3 4 5)
[1 2 3] [2 3 4] [3 4 5]

s = IO.read("a").lines.map!(&:strip)
s.each do |x|
  puts "(eq? [] (take 0 [#{x}]))"
end
s.each do |x|
  puts "(eq? [#{x}] (take 1000000 [#{x}]))"
end
s.each do |x|
  puts "(eq? [#{x}] (take 1 [#{x}]))"
end

s = IO.read("a").lines.map!(&:strip)
s.each do |x|
  puts "(eq? '() (take 0 (list #{x})))"
end
s.each do |x|
  puts "(eq? (list #{x}) (take 1000000 (list #{x})))"
end
s.each do |x|
  puts "(eq? (list #{x}) (take 1 (list #{x})))"
end
