
(def-macro (begin x y) (list 'if x y y))

(def-macro (comment & e) '())

(define (list & xs) xs)

(define car _car)

(define cdr _cdr)

(define vector-append _vector-append)

(define vector-get _vector-get)

(define vector-size _vector-size)

(define (empty? xs)
  (if (vector? xs)
    (= (vector-size xs) 0)
    (if (nil? xs) #t #f)))

(define (id e) e)

(println! (lyra-type-id 1))

#t
