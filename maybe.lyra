(when (not (defined? 'lyra-core-maybe-loaded))

(define lyra-core-maybe-loaded #t)

(let ((maybe-id (register-type!))
      (nothing-id (register-type!)))
  (define-record maybe-id maybe inner)
  (define maybe make-maybe)

  (define-record nothing-id _nothing)
  (define _nothing (make-maybe (make-_nothing)))
  (define (nothing & x) _nothing)
  (define (nothing? x) (if (_nothing? x) #t (if (maybe? x) (_nothing? x.?) #f)))

  (add-type-fn! maybe-id 'unwrap maybe-inner)
  (add-type-fn! maybe-id '->string (lambda (m) (string "(maybe " (->string m.?) ")")))
  (add-type-fn! nothing-id '->string (lambda (n) "nothing"))
  )
)
