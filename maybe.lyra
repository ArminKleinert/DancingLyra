(when (not (defined? 'lyra-core-maybe-loaded))

(define lyra-core-maybe-loaded #t)

(let ((maybe-id (add-type!))
      (nothing-id (add-type!)))
  (define-record maybe-id maybe inner)
  (define (maybe x) (make-maybe x))

  (define-record nothing-id nothing)
  (define nothing (make-maybe (make-nothing)))

  (add-type-fn! maybe-id 'unwrap maybe-inner)
  (add-type-fn! maybe-id '->string (lambda (m) (string "(maybe " (->string m.?) ")")))
  (add-type-fn! nothing-id '->string (lambda (n) "nothing"))
  )
